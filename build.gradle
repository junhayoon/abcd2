/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.6.3/userguide/java_library_plugin.html
 */
 
buildscript {
    ext {
        springBootVersion = '2.2.0.RELEASE'
        querydslPluginVersion = '1.0.10'
    }
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslPluginVersion}"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.2'
    }
    
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.ewerk.gradle.plugins.querydsl"
apply plugin: 'org.junit.platform.gradle.plugin'

jar {
    baseName = "smartfactory"
    version =  '0.1.0'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
    maven {
        url 'https://repo.spring.io/libs-milestone'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    implementation("org.springframework.boot:spring-boot-starter-web")
    
    implementation("org.projectlombok:lombok:1.18.10")
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation("org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.1.4.RELEASE")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation("org.springframework.boot:spring-boot-starter-mustache")
    implementation("org.springframework.boot:spring-boot-starter-webflux")
    implementation("org.springframework.boot:spring-boot-starter-websocket")
    implementation("org.springframework.boot:spring-boot-starter-mail")
    implementation("org.springframework.kafka:spring-kafka")
    
    implementation("com.querydsl:querydsl-core")
    implementation("com.querydsl:querydsl-jpa")
    implementation("com.querydsl:querydsl-apt")
    implementation("org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16")
    implementation group: 'net.rakugakibox.util', name: 'yaml-resource-bundle', version: '1.1'
    implementation("org.springframework.integration:spring-integration-mqtt")
    implementation group: 'org.json', name: 'json', version: '20190722'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.10.1'
    implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-parameter-names', version: '2.10.1'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: '2.10.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.1'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate5', version: '2.10.1'
    
    implementation group: 'org.drools', name: 'drools-core', version: '7.29.0.Final'
    implementation group: 'org.drools', name: 'drools-compiler', version: '7.29.0.Final'
    implementation group: 'org.kie', name: 'kie-spring', version: '7.29.0.Final'
    implementation group: 'org.jbpm', name: 'jbpm-flow', version: '7.29.0.Final'
    implementation group: 'org.jbpm', name: 'jbpm-flow-builder', version: '7.29.0.Final'
    implementation group: 'org.jbpm', name: 'jbpm-bpmn2', version: '7.29.0.Final'
    
    implementation group: 'com.vladmihalcea', name: 'hibernate-types-52', version: '2.8.0'
    implementation group: 'org.quartz-scheduler', name: 'quartz', version: '2.3.2'
    
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.12'
    implementation group: 'org.bouncycastle', name: 'bcprov-jdk16', version: '1.46'
    
    implementation fileTree(dir: 'lib', include: ['*.jar'])
    
    implementation group: 'net.sf.jasperreports', name: 'jasperreports', version: '6.12.2'
    implementation group: 'com.lowagie', name: 'itext', version: '2.1.7'
    // https://mvnrepository.com/artifact/javax.persistence/javax.persistence-api
    
    implementation 'org.springframework.mobile:spring-mobile-device:2.0.0.M3'
    
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.2'
    implementation 'org.mariadb.jdbc:mariadb-java-client'
    //implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client'	// MariaDB
    
    //runtimeOnly 'org.mariadb.jdbc:mariadb-java-client' // MariaDB
    runtimeOnly 'mysql:mysql-connector-java' // mysql
    
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    
    testImplementation("org.springframework.security:spring-security-test")
    //testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.springframework.kafka:spring-kafka-test")
    testImplementation 'junit:junit:4.12'
    //testCompile group: 'junit', name: 'junit', version: '4.12'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude module: 'junit'
    }
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.5.2')
    testImplementation('org.junit.jupiter:junit-jupiter-params:5.5.2')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.5.2')
	
    implementation("org.springframework.boot:spring-boot-devtools")
}

def querydslSrcDir = 'src/main/generated'

querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslSrcDir
}


ext.profile = (!project.hasProperty('profile') || !profile) ? 'stage' : profile
println "current profile : ${profile}"

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslSrcDir]
        }
        resources {
            srcDirs = ["src/main/java", "src/main/resources", "src/main/resources-${profile}"] //, "src/main/resources-${profile}"
        }
    }
    test {
        java {
            //srcDirs = ["test"]
            srcDirs = ["src/test/java"]
        }
        //resources {
        //    srcDirs = ["config"]
        //}   
    }
}

compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    querydsl.extendsFrom compileClasspath
}

test {
    testLogging {
        showStandardStreams = true
    }
    //useJUnit {
    //  excludeCategories 'kr.co.ismartcity.smartIsland.service.MobiusServiceTest'
    //}
    //useJUnitPlatform()
}

//task MobiusServiceTest(type: Test, group: 'verification') {
//
//    useJUnit {
//      includeCategories 'kr.co.ismartcity.smartIsland.service.MobiusServiceTest'
//  }
//}

clean.doLast { 
     file(new File(projectDir, querydslSrcDir)).deleteDir() 
}

task classpathJar(type: Jar) {
    inputs.files sourceSets.test.runtimeClasspath
 
    archiveName = "smartfactory.jar"
    doFirst {
        // If run in configuration phase, some artifacts may not exist yet (after clean)
        // and File.toURI canâ€™t figure out what is directory to add the critical trailing slash.
        manifest {
            def classpath = sourceSets.test.runtimeClasspath.files
            attributes "Class-Path": classpath.collect {f -> f.toURI().toString()}.join(" ")
            //attributes 'Class-Path': configurations.testCompile.files.collect{ project.uri(it) }.join(' ')
        }
    }
}

bootRun {
    classpath = classpathJar.outputs.files
}

springBoot {
    mainClassName = 'kr.co.ismartcity.smartfactory.Application'
}
